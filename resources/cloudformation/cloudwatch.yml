---
AWSTemplateFormatVersion: 2010-09-09

Description: Ship Cloudwatch logs to an Elastic Stack.

Parameters:
  LambdaSecurityGroups:
    Type: List<AWS::EC2::SecurityGroup::Id>
  LambdaSubnets:
    Type: List<AWS::EC2::Subnet::Id>
  IndexName:
    Type: String
  Logstash:
    Type: String
  ChunkSize:
    Type: String
    Default: 1000
  Timeout:
    Type: String
    Default: 30

Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
              - lambda.amazonaws.com
          Action:
            - sts:AssumeRole
      Policies:
        - PolicyName: LogLambda
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                  - logs:PutLogEvents
                  - logs:FilterLogEvents
                  - logs:getLogEvents
                Resource: 'arn:aws:logs:*:*:*'
        - PolicyName: VpcNetworking
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - ec2:CreateNetworkInterface
                  - ec2:DeleteNetworkInterface
                  - 'ec2:Describe*'
                Resource: '*'
  CloudwatchFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: ../../build/cloudwatch.zip
      Description: Ship Cloudwatch logs to Elastic Stack
      Environment:
        Variables:
          CHUNK_SIZE: !Ref ChunkSize
          INDEXNAME: !Ref IndexName
          LOGSTASH: !Ref Logstash
          LOG_LEVEL: INFO
          TIMEOUT: !Ref Timeout
      FunctionName: cloudwatch_logs_to_elastic
      Handler: cloudwatch
      Role: !GetAtt LambdaRole.Arn
      Runtime: go1.x
      Timeout: 60
      VpcConfig:
        SecurityGroupIds: !Ref LambdaSecurityGroups
        SubnetIds: !Ref LambdaSubnets
  CloudwatchLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${CloudwatchFunction}'
      RetentionInDays: 30
    DependsOn:
      - CloudwatchFunction
  CloudwatchExecPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref CloudwatchFunction
      Action: lambda:InvokeFunction
      Principal: logs.amazonaws.com
